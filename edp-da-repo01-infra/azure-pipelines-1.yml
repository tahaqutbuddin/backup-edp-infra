trigger:
- none

parameters: 
  - name: environment
    displayName: 'Environment'
    type: string
    default: 'dev'
    values:
      - 'dev'
      - 'prod'
      - 'tst'
      
variables:
  - name: directoryName
    value: ${{ parameters.environment }}

pool:
  vmImage: ubuntu-latest

steps:
- bash: cd $(directoryName)
  displayName: 'Change Directory'

- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(directoryName)'
    backendServiceArm: 'Pay-As-You-Go(1)(6373a757-98f6-48e6-acab-41a30e2627e1)'
    backendAzureRmResourceGroupName: 'att-edp-da-rg01-infra'
    backendAzureRmStorageAccountName: 'attedpdadls'
    backendAzureRmContainerName: 'attstatetf'
    backendAzureRmKey: 'infra/terraform.tfstate'
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(directoryName)'
  displayName: 'Terraform Validate'

- task: TerraformTaskV4@4
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(directoryName)'
    environmentServiceNameAzureRM: 'Pay-As-You-Go(1)(6373a757-98f6-48e6-acab-41a30e2627e1)'